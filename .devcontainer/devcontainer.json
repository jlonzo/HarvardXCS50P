// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python 3",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:3.12-bullseye",

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			"settings": {
				"workbench.colorTheme": "Default Dark Modern",
				"editor.lineHeight": 0,
				"editor.fontSize": 14,
				"terminal.integrated.defaultProfile.windows": "Command Prompt",
				//"terminal.integrated.shellArgs.windows": ["-ExecutionPolicy","Bypass"],
			
				"[python]": {
					"editor.rulers": [
						{ "column": 72, "color": "#40ff40" }, // DocStrings & Comments
						{ "column": 79, "color": "#40f9ff" }, // Pep8 Line length
			//          { "column": 88, "color": "#40f9ff" },   // python-black
					],
			
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnType": false,
					"editor.formatOnSave": true,
					"editor.codeActionsOnSave": {
						"source.fixAll": true,
						"source.organizeImports": true
					}
				},
			
				"code-runner.showExecutionMessage": false,
				"code-runner.clearPreviousOutput": true,
				"code-runner.runInTerminal": true,
				"code-runner.executorMap": {
					"javascript": "node",
					"java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
					"c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"zig": "zig run",
					"cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"php": "php",
					"python": "cls && python -u",
					//"python": "clear && python -u", // bash: (macos,linux,etc)
					"perl": "perl",
					"perl6": "perl6",
					"ruby": "ruby",
					"go": "go run",
					"lua": "lua",
					"groovy": "groovy",
					"powershell": "powershell -ExecutionPolicy ByPass -File",
					"bat": "cmd /c",
					"shellscript": "bash",
					"fsharp": "fsi",
					"csharp": "scriptcs",
					"vbscript": "cscript //Nologo",
					"typescript": "ts-node",
					"coffeescript": "coffee",
					"scala": "scala",
					"swift": "swift",
					"julia": "julia",
					"crystal": "crystal",
					"ocaml": "ocaml",
					"r": "Rscript",
					"applescript": "osascript",
					"clojure": "lein exec",
					"haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
					"rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
					"racket": "racket",
					"scheme": "csi -script",
					"ahk": "autohotkey",
					"autoit": "autoit3",
					"dart": "dart",
					"pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
					"d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
					"haskell": "runghc",
					"nim": "nim compile --verbosity:0 --hints:off --run",
					"lisp": "sbcl --script",
					"kit": "kitc --run",
					"v": "v run",
					"sass": "sass --style expanded",
					"scss": "scss --style expanded",
					"less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
					"FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"sml": "cd $dir && sml $fileName"
				}				
			},
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"formulahendry.code-runner",
				"ms-python.black-formatter",
				"charliermarsh.ruff"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	//"postCreateCommand": "cp /workspaces/HarvardXCS50P/.devcontainer/settings.json ~/.vscode-remote/data/Machine/settings.json"	
	//"postCreateCommand": "./.devcontainer/postCreateCommand.sh"
	//"postCreateCommand": "bash -i ./.devcontainer/postCreateCommand.sh"

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
